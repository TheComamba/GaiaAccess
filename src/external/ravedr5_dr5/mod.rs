use crate::{column::Column, schema::Schema};

pub struct Ravedr5Dr5;

impl Schema for Ravedr5Dr5 {
    fn string(&self) -> String {
        "ravedr5_dr5".to_string()
    }
}

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display, strum::EnumIter)]
pub enum Col {
    name,
    healpix,
    rave,
    ra,
    dec,
    glon,
    glat,
    hrv,
    e_hrv,
    s_hrv,
    s_med_hrv,
    snrs,
    snrk,
    teffk,
    cteffk,
    e_teffk,
    s_med_teffk,
    s_teffk,
    loggk,
    cloggk,
    e_loggk,
    s_loggk,
    s_med_loggk,
    m_h_k,
    m_h_nk,
    e__m_h_k,
    s__m_h_k,
    s_med__m_h_k,
    chisqk,
    qk,
    teffir,
    e_teffir,
    irdirect,
    mg_h_c,
    o_mg_h_c,
    al_h_c,
    o_al_h_c,
    si_h_c,
    o_si_h_c,
    ti_h_c,
    o_ti_h_c,
    fe_h_c,
    o_fe_h_c,
    ni_h_c,
    o_ni_h_c,
    a_fe_c,
    chisqc,
    fracc,
    avschl,
    dist,
    e_dist,
    logav,
    e_logav,
    plx,
    e_plx,
    dm,
    e_dm,
    ffb,
    fqb,
    ngauss,
    gm1,
    gs1,
    gf1,
    gm2,
    gs2,
    gf2,
    gm3,
    gs3,
    gf3,
    c1,
    c2,
    c3,
    c4,
    c5,
    c6,
    c7,
    c8,
    c9,
    c10,
    c11,
    c12,
    c13,
    c14,
    c15,
    c16,
    c17,
    c18,
    c19,
    c20,
    repflag,
    clsflag,
    fpflag,
    tgas,
    ratgas,
    detgas,
    pmratgas,
    e_pmratgas,
    pmdetgas,
    e_pmdetgas,
    plxtgas,
    e_plxtgas,
    gmagtgas,
    gfluxtgas,
    e_gfluxtgas,
    hipparcos,
    tycho2,
    distt2,
    xt2,
    btmagt2,
    e_btmagt2,
    vtmagt2,
    e_vtmagt2,
    pmrat2,
    e_pmrat2,
    pmdet2,
    e_pmdet2,
    ucac4,
    distu4,
    xu4,
    pmrau4,
    e_pmrau4,
    pmdeu4,
    e_pmdeu4,
    ppmxl,
    distp,
    xp,
    pmrap,
    e_pmrap,
    pmdep,
    e_pmdep,
    col2mass,
    dist2,
    x2,
    jmag2,
    e_jmag2,
    hmag2,
    e_hmag2,
    kmag2,
    e_kmag2,
    allwise,
    distw,
    xw,
    w1magw,
    e_w1magw,
    w2magw,
    e_w2magw,
    w3magw,
    e_w3magw,
    w4magw,
    e_w4magw,
    ccflagsw,
    extflgw,
    varflgw,
    phqualw,
    distadr9,
    xadr9,
    bmagadr9,
    e_bmagadr9,
    vmagadr9,
    e_vmagadr9,
    gpmagadr9,
    e_gpmagadr9,
    rpmagadr9,
    e_rpmagadr9,
    ipmagadr9,
    e_ipmagadr9,
    denis,
    distd,
    xd,
    imagd,
    e_imagd,
    jmagd,
    e_jmagd,
    kmagd,
    e_kmagd,
    usnob1,
    distub1,
    xub1,
    b1magub1,
    r1magub1,
    b2magub1,
    r2magub1,
    imagub1,
    pmraub1,
    e_pmraub1,
    pmdeub1,
    e_pmdeub1,
    obsdate,
    fieldname,
    fibernb,
    platenb,
    mjdobs,
    lststart,
    lstend,
    utcstart,
    utcend,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    use strum::IntoEnumIterator;
    let col_strings = Col::iter().map(|col| col.to_string()).collect();
    map.insert(Ravedr5Dr5.string(), col_strings);
}
