
// This code is generated by generate_code.py, do not modify it manually
use crate::column::Column;
use crate::schema::Schema;

#[allow(non_camel_case_types)]
pub struct oa_neuron_information;

impl Schema for oa_neuron_information {
    fn string(&self) -> String {
        "oa_neuron_information".to_string()
    }
}

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    solution_id,
som_id,
neuron_id,
neuron_row_index,
neuron_column_index,
hits,
class_label,
centroid_id,
centroid_distance,
template_distance,
g_mag_mean,
g_mag_std_dev,
g_mag_min,
g_mag_max,
bp_mag_mean,
bp_mag_std_dev,
bp_mag_min,
bp_mag_max,
rp_mag_mean,
rp_mag_std_dev,
rp_mag_min,
rp_mag_max,
pm_ra_mean,
pm_ra_std_dev,
pm_ra_min,
pm_ra_max,
pm_dec_mean,
pm_dec_std_dev,
pm_dec_min,
pm_dec_max,
parallax_mean,
parallax_std_dev,
parallax_min,
parallax_max,
gal_latitude_mean,
gal_latitude_std_dev,
gal_latitude_min,
gal_latitude_max,
intra_neuron_distance_mean,
intra_neuron_distance_std_dev,
intra_neuron_distance_min,
intra_neuron_distance_max,
inter_neuron_distance_mean,
inter_neuron_distance_std_dev,
inter_neuron_distance_min,
inter_neuron_distance_max,
template_name,
distance_percentile25,
distance_percentile50,
distance_percentile68,
distance_percentile75,
distance_percentile95,
distance_fwhm,
distance_skew,
distance_kurtosis,
distance_i_q_r,
distance_fwhm_norm,
quality_category,
bp_transits_mean,
bp_transits_std_dev,
bp_transits_min,
bp_transits_max,
rp_transits_mean,
rp_transits_std_dev,
rp_transits_min,
rp_transits_max,
ruwe_mean,
ruwe_std_dev,
ruwe_min,
ruwe_max,
bprp_mean_flux_excess_mean,
bprp_mean_flux_excess_std_dev,
bprp_mean_flux_excess_min,
bprp_mean_flux_excess_max,
bprp_colour_mean,
bprp_colour_std_dev,
bprp_colour_min,
bprp_colour_max,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    use strum::IntoEnumIterator;
    col_strings.push(Col::solution_id.to_string());
col_strings.push(Col::som_id.to_string());
col_strings.push(Col::neuron_id.to_string());
col_strings.push(Col::neuron_row_index.to_string());
col_strings.push(Col::neuron_column_index.to_string());
col_strings.push(Col::hits.to_string());
col_strings.push(Col::class_label.to_string());
col_strings.push(Col::centroid_id.to_string());
col_strings.push(Col::centroid_distance.to_string());
col_strings.push(Col::template_distance.to_string());
col_strings.push(Col::g_mag_mean.to_string());
col_strings.push(Col::g_mag_std_dev.to_string());
col_strings.push(Col::g_mag_min.to_string());
col_strings.push(Col::g_mag_max.to_string());
col_strings.push(Col::bp_mag_mean.to_string());
col_strings.push(Col::bp_mag_std_dev.to_string());
col_strings.push(Col::bp_mag_min.to_string());
col_strings.push(Col::bp_mag_max.to_string());
col_strings.push(Col::rp_mag_mean.to_string());
col_strings.push(Col::rp_mag_std_dev.to_string());
col_strings.push(Col::rp_mag_min.to_string());
col_strings.push(Col::rp_mag_max.to_string());
col_strings.push(Col::pm_ra_mean.to_string());
col_strings.push(Col::pm_ra_std_dev.to_string());
col_strings.push(Col::pm_ra_min.to_string());
col_strings.push(Col::pm_ra_max.to_string());
col_strings.push(Col::pm_dec_mean.to_string());
col_strings.push(Col::pm_dec_std_dev.to_string());
col_strings.push(Col::pm_dec_min.to_string());
col_strings.push(Col::pm_dec_max.to_string());
col_strings.push(Col::parallax_mean.to_string());
col_strings.push(Col::parallax_std_dev.to_string());
col_strings.push(Col::parallax_min.to_string());
col_strings.push(Col::parallax_max.to_string());
col_strings.push(Col::gal_latitude_mean.to_string());
col_strings.push(Col::gal_latitude_std_dev.to_string());
col_strings.push(Col::gal_latitude_min.to_string());
col_strings.push(Col::gal_latitude_max.to_string());
col_strings.push(Col::intra_neuron_distance_mean.to_string());
col_strings.push(Col::intra_neuron_distance_std_dev.to_string());
col_strings.push(Col::intra_neuron_distance_min.to_string());
col_strings.push(Col::intra_neuron_distance_max.to_string());
col_strings.push(Col::inter_neuron_distance_mean.to_string());
col_strings.push(Col::inter_neuron_distance_std_dev.to_string());
col_strings.push(Col::inter_neuron_distance_min.to_string());
col_strings.push(Col::inter_neuron_distance_max.to_string());
col_strings.push(Col::template_name.to_string());
col_strings.push(Col::distance_percentile25.to_string());
col_strings.push(Col::distance_percentile50.to_string());
col_strings.push(Col::distance_percentile68.to_string());
col_strings.push(Col::distance_percentile75.to_string());
col_strings.push(Col::distance_percentile95.to_string());
col_strings.push(Col::distance_fwhm.to_string());
col_strings.push(Col::distance_skew.to_string());
col_strings.push(Col::distance_kurtosis.to_string());
col_strings.push(Col::distance_i_q_r.to_string());
col_strings.push(Col::distance_fwhm_norm.to_string());
col_strings.push(Col::quality_category.to_string());
col_strings.push(Col::bp_transits_mean.to_string());
col_strings.push(Col::bp_transits_std_dev.to_string());
col_strings.push(Col::bp_transits_min.to_string());
col_strings.push(Col::bp_transits_max.to_string());
col_strings.push(Col::rp_transits_mean.to_string());
col_strings.push(Col::rp_transits_std_dev.to_string());
col_strings.push(Col::rp_transits_min.to_string());
col_strings.push(Col::rp_transits_max.to_string());
col_strings.push(Col::ruwe_mean.to_string());
col_strings.push(Col::ruwe_std_dev.to_string());
col_strings.push(Col::ruwe_min.to_string());
col_strings.push(Col::ruwe_max.to_string());
col_strings.push(Col::bprp_mean_flux_excess_mean.to_string());
col_strings.push(Col::bprp_mean_flux_excess_std_dev.to_string());
col_strings.push(Col::bprp_mean_flux_excess_min.to_string());
col_strings.push(Col::bprp_mean_flux_excess_max.to_string());
col_strings.push(Col::bprp_colour_mean.to_string());
col_strings.push(Col::bprp_colour_std_dev.to_string());
col_strings.push(Col::bprp_colour_min.to_string());
col_strings.push(Col::bprp_colour_max.to_string());
    map.insert(oa_neuron_information.string(), col_strings);
}
