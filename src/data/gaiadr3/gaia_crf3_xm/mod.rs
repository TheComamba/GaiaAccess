// This code is generated by generate_code.py, do not modify it manually
use crate::traits::{Column, Table};

#[allow(non_camel_case_types)]
pub struct gaia_crf3_xm;

impl Table for gaia_crf3_xm {
    fn string(&self) -> String {
        "gaia_crf3_xm".to_string()
    }
}

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    solution_id,
    source_id,
    icrf3sx,
    icrf3k,
    icrf3xka,
    icrf_name,
    iers_name,
    ocars,
    ocars_name,
    aw15,
    aw15_name,
    r90,
    r90_name,
    m65,
    m65_name,
    c75,
    c75_name,
    dr14q,
    dr14q_name,
    lqac5,
    lqac5_name,
    lamost5,
    lamost5_name,
    lqrf,
    lqrf_name,
    cat2qz,
    cat2qz_name,
    bzcat5,
    bzcat5_name,
    cat2whspj,
    cat2whspj_name,
    alma19,
    alma19_name,
    guw,
    guw_name,
    b19,
    b19_name,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::source_id.to_string());
    col_strings.push(Col::icrf3sx.to_string());
    col_strings.push(Col::icrf3k.to_string());
    col_strings.push(Col::icrf3xka.to_string());
    col_strings.push(Col::icrf_name.to_string());
    col_strings.push(Col::iers_name.to_string());
    col_strings.push(Col::ocars.to_string());
    col_strings.push(Col::ocars_name.to_string());
    col_strings.push(Col::aw15.to_string());
    col_strings.push(Col::aw15_name.to_string());
    col_strings.push(Col::r90.to_string());
    col_strings.push(Col::r90_name.to_string());
    col_strings.push(Col::m65.to_string());
    col_strings.push(Col::m65_name.to_string());
    col_strings.push(Col::c75.to_string());
    col_strings.push(Col::c75_name.to_string());
    col_strings.push(Col::dr14q.to_string());
    col_strings.push(Col::dr14q_name.to_string());
    col_strings.push(Col::lqac5.to_string());
    col_strings.push(Col::lqac5_name.to_string());
    col_strings.push(Col::lamost5.to_string());
    col_strings.push(Col::lamost5_name.to_string());
    col_strings.push(Col::lqrf.to_string());
    col_strings.push(Col::lqrf_name.to_string());
    col_strings.push(Col::cat2qz.to_string());
    col_strings.push(Col::cat2qz_name.to_string());
    col_strings.push(Col::bzcat5.to_string());
    col_strings.push(Col::bzcat5_name.to_string());
    col_strings.push(Col::cat2whspj.to_string());
    col_strings.push(Col::cat2whspj_name.to_string());
    col_strings.push(Col::alma19.to_string());
    col_strings.push(Col::alma19_name.to_string());
    col_strings.push(Col::guw.to_string());
    col_strings.push(Col::guw_name.to_string());
    col_strings.push(Col::b19.to_string());
    col_strings.push(Col::b19_name.to_string());
    map.insert(gaia_crf3_xm.string(), col_strings);
}
