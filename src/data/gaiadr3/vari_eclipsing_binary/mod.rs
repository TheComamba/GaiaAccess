
// This code is generated by generate_code.py, do not modify it manually
use crate::column::Column;
use crate::schema::Schema;

#[allow(non_camel_case_types)]
pub struct vari_eclipsing_binary;

impl Schema for vari_eclipsing_binary {
    fn string(&self) -> String {
        "vari_eclipsing_binary".to_string()
    }
}

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    solution_id,
source_id,
global_ranking,
reference_time,
frequency,
frequency_error,
geom_model_reference_level,
geom_model_reference_level_error,
geom_model_gaussian1_phase,
geom_model_gaussian1_phase_error,
geom_model_gaussian1_sigma,
geom_model_gaussian1_sigma_error,
geom_model_gaussian1_depth,
geom_model_gaussian1_depth_error,
geom_model_gaussian2_phase,
geom_model_gaussian2_phase_error,
geom_model_gaussian2_sigma,
geom_model_gaussian2_sigma_error,
geom_model_gaussian2_depth,
geom_model_gaussian2_depth_error,
geom_model_cosine_half_period_amplitude,
geom_model_cosine_half_period_amplitude_error,
geom_model_cosine_half_period_phase,
geom_model_cosine_half_period_phase_error,
model_type,
num_model_parameters,
reduced_chi2,
derived_primary_ecl_phase,
derived_primary_ecl_phase_error,
derived_primary_ecl_duration,
derived_primary_ecl_duration_error,
derived_primary_ecl_depth,
derived_primary_ecl_depth_error,
derived_secondary_ecl_phase,
derived_secondary_ecl_phase_error,
derived_secondary_ecl_duration,
derived_secondary_ecl_duration_error,
derived_secondary_ecl_depth,
derived_secondary_ecl_depth_error,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    use strum::IntoEnumIterator;
    col_strings.push(Col::solution_id.to_string());
col_strings.push(Col::source_id.to_string());
col_strings.push(Col::global_ranking.to_string());
col_strings.push(Col::reference_time.to_string());
col_strings.push(Col::frequency.to_string());
col_strings.push(Col::frequency_error.to_string());
col_strings.push(Col::geom_model_reference_level.to_string());
col_strings.push(Col::geom_model_reference_level_error.to_string());
col_strings.push(Col::geom_model_gaussian1_phase.to_string());
col_strings.push(Col::geom_model_gaussian1_phase_error.to_string());
col_strings.push(Col::geom_model_gaussian1_sigma.to_string());
col_strings.push(Col::geom_model_gaussian1_sigma_error.to_string());
col_strings.push(Col::geom_model_gaussian1_depth.to_string());
col_strings.push(Col::geom_model_gaussian1_depth_error.to_string());
col_strings.push(Col::geom_model_gaussian2_phase.to_string());
col_strings.push(Col::geom_model_gaussian2_phase_error.to_string());
col_strings.push(Col::geom_model_gaussian2_sigma.to_string());
col_strings.push(Col::geom_model_gaussian2_sigma_error.to_string());
col_strings.push(Col::geom_model_gaussian2_depth.to_string());
col_strings.push(Col::geom_model_gaussian2_depth_error.to_string());
col_strings.push(Col::geom_model_cosine_half_period_amplitude.to_string());
col_strings.push(Col::geom_model_cosine_half_period_amplitude_error.to_string());
col_strings.push(Col::geom_model_cosine_half_period_phase.to_string());
col_strings.push(Col::geom_model_cosine_half_period_phase_error.to_string());
col_strings.push(Col::model_type.to_string());
col_strings.push(Col::num_model_parameters.to_string());
col_strings.push(Col::reduced_chi2.to_string());
col_strings.push(Col::derived_primary_ecl_phase.to_string());
col_strings.push(Col::derived_primary_ecl_phase_error.to_string());
col_strings.push(Col::derived_primary_ecl_duration.to_string());
col_strings.push(Col::derived_primary_ecl_duration_error.to_string());
col_strings.push(Col::derived_primary_ecl_depth.to_string());
col_strings.push(Col::derived_primary_ecl_depth_error.to_string());
col_strings.push(Col::derived_secondary_ecl_phase.to_string());
col_strings.push(Col::derived_secondary_ecl_phase_error.to_string());
col_strings.push(Col::derived_secondary_ecl_duration.to_string());
col_strings.push(Col::derived_secondary_ecl_duration_error.to_string());
col_strings.push(Col::derived_secondary_ecl_depth.to_string());
col_strings.push(Col::derived_secondary_ecl_depth_error.to_string());
    map.insert(vari_eclipsing_binary.string(), col_strings);
}
