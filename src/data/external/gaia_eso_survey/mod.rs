// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the gaia_eso_survey table.

use crate::traits::{Column, Table};

/// The gaia_eso_survey table.
#[allow(non_camel_case_types)]
pub struct gaia_eso_survey;

impl Table for gaia_eso_survey {
    fn string(&self) -> String {
        "gaia_eso_survey".to_string()
    }
}

/// The columns in the gaia_eso_survey table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    object,
    ges_fld,
    ges_type,
    ra,
    dec,
    epoch,
    teff,
    e_teff,
    logg,
    e_logg,
    feh,
    e_feh,
    vrad,
    e_vrad,
    vsini,
    e_vsini,
    lim_vsini,
    li1,
    e_li1,
    lim_li1,
    ew_li,
    e_ew_li,
    lim_ew_li,
    o1,
    e_o1,
    mg1,
    e_mg1,
    al1,
    e_al1,
    si1,
    e_si1,
    ca1,
    e_ca1,
    ti1,
    e_ti1,
    ni1,
    e_ni1,
    ba2,
    e_ba2,
    eu2,
    e_eu2,
    sflags,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::object.to_string());
    col_strings.push(Col::ges_fld.to_string());
    col_strings.push(Col::ges_type.to_string());
    col_strings.push(Col::ra.to_string());
    col_strings.push(Col::dec.to_string());
    col_strings.push(Col::epoch.to_string());
    col_strings.push(Col::teff.to_string());
    col_strings.push(Col::e_teff.to_string());
    col_strings.push(Col::logg.to_string());
    col_strings.push(Col::e_logg.to_string());
    col_strings.push(Col::feh.to_string());
    col_strings.push(Col::e_feh.to_string());
    col_strings.push(Col::vrad.to_string());
    col_strings.push(Col::e_vrad.to_string());
    col_strings.push(Col::vsini.to_string());
    col_strings.push(Col::e_vsini.to_string());
    col_strings.push(Col::lim_vsini.to_string());
    col_strings.push(Col::li1.to_string());
    col_strings.push(Col::e_li1.to_string());
    col_strings.push(Col::lim_li1.to_string());
    col_strings.push(Col::ew_li.to_string());
    col_strings.push(Col::e_ew_li.to_string());
    col_strings.push(Col::lim_ew_li.to_string());
    col_strings.push(Col::o1.to_string());
    col_strings.push(Col::e_o1.to_string());
    col_strings.push(Col::mg1.to_string());
    col_strings.push(Col::e_mg1.to_string());
    col_strings.push(Col::al1.to_string());
    col_strings.push(Col::e_al1.to_string());
    col_strings.push(Col::si1.to_string());
    col_strings.push(Col::e_si1.to_string());
    col_strings.push(Col::ca1.to_string());
    col_strings.push(Col::e_ca1.to_string());
    col_strings.push(Col::ti1.to_string());
    col_strings.push(Col::e_ti1.to_string());
    col_strings.push(Col::ni1.to_string());
    col_strings.push(Col::e_ni1.to_string());
    col_strings.push(Col::ba2.to_string());
    col_strings.push(Col::e_ba2.to_string());
    col_strings.push(Col::eu2.to_string());
    col_strings.push(Col::e_eu2.to_string());
    col_strings.push(Col::sflags.to_string());
    map.insert(gaia_eso_survey.string(), col_strings);
}
