// This code is generated by generate_code.py, do not modify it manually
use crate::column::Column;
use crate::table::Table;

#[allow(non_camel_case_types)]
pub struct ravedr6;

impl Table for ravedr6 {
    fn string(&self) -> String {
        "ravedr6".to_string()
    }
}

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    rave_obs_id,
    ra_input,
    dec_input,
    hrv_sparv,
    hrv_error_sparv,
    snr_med_sparv,
    age_bdasp,
    age_error_bdasp,
    teff_bdasp,
    teff_error_bdasp,
    logg_bdasp,
    logg_error_bdasp,
    mass_bdasp,
    mass_error_bdasp,
    log_a_v_bdasp,
    log_a_v_error_bdasp,
    m_h_cal_madera,
    m_h_error_madera,
    fe_h_gauguin,
    fe_h_error_gauguin,
    fe_h_chisq_gauguin,
    fe_h_nl_gauguin,
    al_h_gauguin,
    al_h_error_gauguin,
    al_h_chisq_gauguin,
    al_h_nl_gauguin,
    ni_h_gauguin,
    ni_h_error_gauguin,
    ni_h_chisq_gauguin,
    ni_h_nl_gauguin,
    alpha_fe_gauguin,
    alpha_fe_error_gauguin,
    alpha_fe_chisq_gauguin,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::rave_obs_id.to_string());
    col_strings.push(Col::ra_input.to_string());
    col_strings.push(Col::dec_input.to_string());
    col_strings.push(Col::hrv_sparv.to_string());
    col_strings.push(Col::hrv_error_sparv.to_string());
    col_strings.push(Col::snr_med_sparv.to_string());
    col_strings.push(Col::age_bdasp.to_string());
    col_strings.push(Col::age_error_bdasp.to_string());
    col_strings.push(Col::teff_bdasp.to_string());
    col_strings.push(Col::teff_error_bdasp.to_string());
    col_strings.push(Col::logg_bdasp.to_string());
    col_strings.push(Col::logg_error_bdasp.to_string());
    col_strings.push(Col::mass_bdasp.to_string());
    col_strings.push(Col::mass_error_bdasp.to_string());
    col_strings.push(Col::log_a_v_bdasp.to_string());
    col_strings.push(Col::log_a_v_error_bdasp.to_string());
    col_strings.push(Col::m_h_cal_madera.to_string());
    col_strings.push(Col::m_h_error_madera.to_string());
    col_strings.push(Col::fe_h_gauguin.to_string());
    col_strings.push(Col::fe_h_error_gauguin.to_string());
    col_strings.push(Col::fe_h_chisq_gauguin.to_string());
    col_strings.push(Col::fe_h_nl_gauguin.to_string());
    col_strings.push(Col::al_h_gauguin.to_string());
    col_strings.push(Col::al_h_error_gauguin.to_string());
    col_strings.push(Col::al_h_chisq_gauguin.to_string());
    col_strings.push(Col::al_h_nl_gauguin.to_string());
    col_strings.push(Col::ni_h_gauguin.to_string());
    col_strings.push(Col::ni_h_error_gauguin.to_string());
    col_strings.push(Col::ni_h_chisq_gauguin.to_string());
    col_strings.push(Col::ni_h_nl_gauguin.to_string());
    col_strings.push(Col::alpha_fe_gauguin.to_string());
    col_strings.push(Col::alpha_fe_error_gauguin.to_string());
    col_strings.push(Col::alpha_fe_chisq_gauguin.to_string());
    map.insert(ravedr6.string(), col_strings);
}
