// This code is generated by generate_code.py, do not modify it manually
use crate::column::Column;
use crate::schema::Schema;

#[allow(non_camel_case_types)]
pub struct gaiadr2_geometric_distance;

impl Schema for gaiadr2_geometric_distance {
    fn string(&self) -> String {
        "gaiadr2_geometric_distance".to_string()
    }
}

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    source_id,
    r_est,
    r_lo,
    r_hi,
    r_len,
    result_flag,
    modality_flag,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::source_id.to_string());
    col_strings.push(Col::r_est.to_string());
    col_strings.push(Col::r_lo.to_string());
    col_strings.push(Col::r_hi.to_string());
    col_strings.push(Col::r_len.to_string());
    col_strings.push(Col::result_flag.to_string());
    col_strings.push(Col::modality_flag.to_string());
    map.insert(gaiadr2_geometric_distance.string(), col_strings);
}
