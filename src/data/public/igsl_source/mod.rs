
// This code is generated by generate_code.py, do not modify it manually
use crate::column::Column;
use crate::schema::Schema;

#[allow(non_camel_case_types)]
pub struct igsl_source;

impl Schema for igsl_source {
    fn string(&self) -> String {
        "igsl_source".to_string()
    }
}

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    solution_id,
source_id,
ra,
dec,
ra_error,
dec_error,
ra_epoch,
dec_epoch,
source_position,
pm_ra,
pm_dec,
pm_ra_error,
pm_dec_error,
source_mu,
galactic_lon,
galactic_lat,
ecliptic_lon,
ecliptic_lat,
mag_bj,
mag_bj_error,
source_mag_bj,
mag_rf,
mag_rf_error,
source_mag_rf,
mag_g,
mag_g_error,
source_mag_g,
mag_grvs,
mag_grvs_error,
source_mag_grvs,
classification,
source_classification,
toggle_asc,
aux_gsc23,
aux_sdss,
aux_ucac,
aux_lqrf,
aux_tycho,
aux_hip,
aux_ppmxl,
aux_ogle,
aux_tmass,
aux_epc,
}

impl Column for Col {}

#[cfg(test)]
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    use strum::IntoEnumIterator;
    col_strings.push(Col::solution_id.to_string());
col_strings.push(Col::source_id.to_string());
col_strings.push(Col::ra.to_string());
col_strings.push(Col::dec.to_string());
col_strings.push(Col::ra_error.to_string());
col_strings.push(Col::dec_error.to_string());
col_strings.push(Col::ra_epoch.to_string());
col_strings.push(Col::dec_epoch.to_string());
col_strings.push(Col::source_position.to_string());
col_strings.push(Col::pm_ra.to_string());
col_strings.push(Col::pm_dec.to_string());
col_strings.push(Col::pm_ra_error.to_string());
col_strings.push(Col::pm_dec_error.to_string());
col_strings.push(Col::source_mu.to_string());
col_strings.push(Col::galactic_lon.to_string());
col_strings.push(Col::galactic_lat.to_string());
col_strings.push(Col::ecliptic_lon.to_string());
col_strings.push(Col::ecliptic_lat.to_string());
col_strings.push(Col::mag_bj.to_string());
col_strings.push(Col::mag_bj_error.to_string());
col_strings.push(Col::source_mag_bj.to_string());
col_strings.push(Col::mag_rf.to_string());
col_strings.push(Col::mag_rf_error.to_string());
col_strings.push(Col::source_mag_rf.to_string());
col_strings.push(Col::mag_g.to_string());
col_strings.push(Col::mag_g_error.to_string());
col_strings.push(Col::source_mag_g.to_string());
col_strings.push(Col::mag_grvs.to_string());
col_strings.push(Col::mag_grvs_error.to_string());
col_strings.push(Col::source_mag_grvs.to_string());
col_strings.push(Col::classification.to_string());
col_strings.push(Col::source_classification.to_string());
col_strings.push(Col::toggle_asc.to_string());
col_strings.push(Col::aux_gsc23.to_string());
col_strings.push(Col::aux_sdss.to_string());
col_strings.push(Col::aux_ucac.to_string());
col_strings.push(Col::aux_lqrf.to_string());
col_strings.push(Col::aux_tycho.to_string());
col_strings.push(Col::aux_hip.to_string());
col_strings.push(Col::aux_ppmxl.to_string());
col_strings.push(Col::aux_ogle.to_string());
col_strings.push(Col::aux_tmass.to_string());
col_strings.push(Col::aux_epc.to_string());
    map.insert(igsl_source.string(), col_strings);
}
